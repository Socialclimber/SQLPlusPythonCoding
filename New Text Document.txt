1. Write a solution to find the ids of products that are both low fat and recyclable.

Return the result table in any order.

The result format is in the following example.
Solution
# Write your MySQL query statement below
SELECT product_id FROM Products WHERE low_fats = 'Y'AND recyclable = 'Y'

2. Find the names of the customer that are either:

    referred by any customer with id != 2.
    not referred by any customer.
Solution
# Write your MySQL query statement below
SELECT name FROM Customer WHERE referee_id <> 2 OR referee_id IS NULL;

3. A country is big if:

    it has an area of at least three million (i.e., 3000000 km2), or
    it has a population of at least twenty-five million (i.e., 25000000).

Write a solution to find the name, population, and area of the big countries.

Return the result table in any order.

Solution
# Write your MySQL query statement below
SELECT name, population, area FROM World WHERE area >= 3000000 OR population >= 25000000;

4. Write a solution to find all the authors that viewed at least one of their own articles.

Return the result table sorted by id in ascending order.
Solution 
# Write your MySQL query statement below
SELECT DISTINCT author_id AS id FROM Views WHERE author_id = viewer_id ORDER BY author_id;

5. Write a solution to find the IDs of the invalid tweets. The tweet is invalid if the number of characters used in the content of the tweet is strictly greater than 15.

Return the result table in any order.
Solution
# Write your MySQL query statement below
SELECT tweet_id FROM Tweets WHERE LENGTH(content) > 15

6. Write a solution to show the unique ID of each user, If a user does not have a unique ID replace just show null.

Return the result table in any order.
Solution
# Write your MySQL query statement below
Select eu.unique_id, e.name
from EmployeeUNI eu
right join Employees e
on e.id = eu.id

7. Write a solution to report the product_name, year, and price for each sale_id in the Sales table.

Return the resulting table in any order.
Solution
# Write your MySQL query statement below
SELECT P.product_name, S.year, S.price FROM Sales AS S
LEFT OUTER JOIN Product AS P
ON S.product_id = P.product_id;

8. Write a solution to find the IDs of the users who visited without making any transactions and the number of times they made these types of visits.

Return the result table sorted in any order.
# Write your MySQL query statement below
SELECT v.customer_id, COUNT(v.visit_id) AS count_no_trans 
from Visits v 
LEFT JOIN Transactions t 
ON v.visit_id = t.visit_id  
WHERE t.amount IS NULL 
GROUP BY v.customer_id; 
